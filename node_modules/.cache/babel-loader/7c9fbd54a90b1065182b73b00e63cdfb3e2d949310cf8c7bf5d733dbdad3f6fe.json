{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useCanvasIdentifier = void 0;\nvar react_1 = require(\"react\");\n/**\n * The canvas count is used to generate a unique Unity canvas ID.\n */\nvar unityCanvasCount = 0;\n/**\n * The prefix used to generate a unique Unity canvas ID.\n */\nvar canvasIdPrefix = \"react-unity-webgl-canvas\";\n/**\n * Generates a unique Unity canvas ID. This is used internally by Unity since\n * version 2021.2 to identify the canvas element in the DOM. This is not\n * documented in the Unity documentation, but it is used in the Unity source\n * code.\n * @returns A unique identifier for a Unity canvas element.\n */\nvar useCanvasIdentifier = function (id) {\n  /**\n   * The canvas incremention is used to generate a new unique Unity canvas ID.\n   */\n  var _a = (0, react_1.useState)(0),\n    canvasIncremention = _a[0],\n    setCanvasIncremention = _a[1];\n  /**\n   * Refreshes the canvas ID by incrementing the canvas incremention.\n   */\n  var refreshCanvasId = (0, react_1.useCallback)(function () {\n    // The canvas incremention is used to generate a new unique Unity canvas ID.\n    setCanvasIncremention(function (prev) {\n      return prev + 1;\n    });\n  }, []);\n  // If the user has provided a Unity canvas ID, then this value is returned.\n  // This is useful for when the user wants to use a custom canvas ID.\n  if (id !== undefined) {\n    return [id, refreshCanvasId];\n  }\n  /**\n   * A unique identifier for a Unity canvas element is memorized.\n   */\n  var canvasId = (0, react_1.useMemo)(function () {\n    // The Unity canvas ID is generated by concatenating the Unity canvas ID\n    // prefix with the canvas count. Every time this value is requested, the\n    // canvas count is incremented.\n    return [canvasIdPrefix, unityCanvasCount].join(\"-\");\n  }, [canvasIncremention]);\n  return [canvasId, refreshCanvasId];\n};\nexports.useCanvasIdentifier = useCanvasIdentifier;","map":{"version":3,"names":["Object","defineProperty","exports","value","useCanvasIdentifier","react_1","require","unityCanvasCount","canvasIdPrefix","id","_a","useState","canvasIncremention","setCanvasIncremention","refreshCanvasId","useCallback","prev","undefined","canvasId","useMemo","join"],"sources":["/Users/hayashidareki/Documents/ポートフォリオ/react_unity/node_modules/react-unity-webgl/distribution/hooks/use-canvas-identifier.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useCanvasIdentifier = void 0;\nvar react_1 = require(\"react\");\n/**\n * The canvas count is used to generate a unique Unity canvas ID.\n */\nvar unityCanvasCount = 0;\n/**\n * The prefix used to generate a unique Unity canvas ID.\n */\nvar canvasIdPrefix = \"react-unity-webgl-canvas\";\n/**\n * Generates a unique Unity canvas ID. This is used internally by Unity since\n * version 2021.2 to identify the canvas element in the DOM. This is not\n * documented in the Unity documentation, but it is used in the Unity source\n * code.\n * @returns A unique identifier for a Unity canvas element.\n */\nvar useCanvasIdentifier = function (id) {\n    /**\n     * The canvas incremention is used to generate a new unique Unity canvas ID.\n     */\n    var _a = (0, react_1.useState)(0), canvasIncremention = _a[0], setCanvasIncremention = _a[1];\n    /**\n     * Refreshes the canvas ID by incrementing the canvas incremention.\n     */\n    var refreshCanvasId = (0, react_1.useCallback)(function () {\n        // The canvas incremention is used to generate a new unique Unity canvas ID.\n        setCanvasIncremention(function (prev) { return prev + 1; });\n    }, []);\n    // If the user has provided a Unity canvas ID, then this value is returned.\n    // This is useful for when the user wants to use a custom canvas ID.\n    if (id !== undefined) {\n        return [id, refreshCanvasId];\n    }\n    /**\n     * A unique identifier for a Unity canvas element is memorized.\n     */\n    var canvasId = (0, react_1.useMemo)(function () {\n        // The Unity canvas ID is generated by concatenating the Unity canvas ID\n        // prefix with the canvas count. Every time this value is requested, the\n        // canvas count is incremented.\n        return [canvasIdPrefix, unityCanvasCount].join(\"-\");\n    }, [canvasIncremention]);\n    return [canvasId, refreshCanvasId];\n};\nexports.useCanvasIdentifier = useCanvasIdentifier;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,IAAIC,OAAO,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B;AACA;AACA;AACA,IAAIC,gBAAgB,GAAG,CAAC;AACxB;AACA;AACA;AACA,IAAIC,cAAc,GAAG,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIJ,mBAAmB,GAAG,SAAAA,CAAUK,EAAE,EAAE;EACpC;AACJ;AACA;EACI,IAAIC,EAAE,GAAG,CAAC,CAAC,EAAEL,OAAO,CAACM,QAAQ,EAAE,CAAC,CAAC;IAAEC,kBAAkB,GAAGF,EAAE,CAAC,CAAC,CAAC;IAAEG,qBAAqB,GAAGH,EAAE,CAAC,CAAC,CAAC;EAC5F;AACJ;AACA;EACI,IAAII,eAAe,GAAG,CAAC,CAAC,EAAET,OAAO,CAACU,WAAW,EAAE,YAAY;IACvD;IACAF,qBAAqB,CAAC,UAAUG,IAAI,EAAE;MAAE,OAAOA,IAAI,GAAG,CAAC;IAAE,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EACN;EACA;EACA,IAAIP,EAAE,KAAKQ,SAAS,EAAE;IAClB,OAAO,CAACR,EAAE,EAAEK,eAAe,CAAC;EAChC;EACA;AACJ;AACA;EACI,IAAII,QAAQ,GAAG,CAAC,CAAC,EAAEb,OAAO,CAACc,OAAO,EAAE,YAAY;IAC5C;IACA;IACA;IACA,OAAO,CAACX,cAAc,EAAED,gBAAgB,CAAC,CAACa,IAAI,CAAC,GAAG,CAAC;EACvD,CAAC,EAAE,CAACR,kBAAkB,CAAC,CAAC;EACxB,OAAO,CAACM,QAAQ,EAAEJ,eAAe,CAAC;AACtC,CAAC;AACDZ,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}